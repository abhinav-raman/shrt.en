import type {
	GetServerSideProps,
	GetServerSidePropsContext,
	NextPage,
} from "next";
import { getSession, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import Popup from "reactjs-popup";

import GoogleLogin from "../components/googleLoginBtn";

export const getServerSideProps: GetServerSideProps = async (
	context: GetServerSidePropsContext
) => {
	const session = await getSession(context);
	return {
		props: {
			userData: session,
		},
	};
};

const Home: NextPage = ({ userData }: any) => {
	const { data: session } = useSession();

	const [enteredUserLink, setEnteredUserLink] = useState("");
	const [enteredSlug, setEnteredSlug] = useState("");
	const [responseData, setResponseData] = useState<undefined | any>(null);

	const createShortLink = async () => {
		console.log(enteredUserLink, enteredSlug);

		const result: any = await (
			await fetch(
				`/api/create-url?slug=${enteredSlug}&userLink=${enteredUserLink}`
			)
		).json();
		setResponseData(result);
		console.log(result);
	};

	return (
		<div>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className="p-4">
				<div className="w-full text-center inline-flex justify-center">
					<h1 className="font-medium text-5xl">
						<span>Shrt.en </span>
						your links
					</h1>
					{userData && (
						<Popup
							trigger={
								<button className="h-[3rem] absolute right-4 aspect-square rounded-full">
									<Image
										src={userData.user.image}
										alt="Profile"
										layout="responsive"
										height={"100%"}
										width={"100%"}
										className="rounded-full"
									/>
								</button>
							}
							position="bottom right"
						>
							<div className="max-w-max p-2 border border-gray-400 rounded">
								<p className="whitespace-nowrap">
									Welcome, {userData.user?.name?.split(" ")[0]}
								</p>
								<button onClick={() => signOut()}>Logout</button>
							</div>
						</Popup>
					)}
				</div>
				<div className="w-full text-center mt-[20vh]">
					{(process.env.NODE_ENV === "development"
						? "localhost:3000"
						: "http://shrt-en.vercel.app") + "/ "}
					<input
						name="slug"
						value={enteredSlug}
						className="border border-gray-400 rounded px-2 py-1"
						placeholder="Choose a slug"
						onChange={({ target }) => setEnteredSlug(target.value)}
					/>
				</div>
				<div className="w-full text-center my-2">
					<input
						name="link"
						value={enteredUserLink}
						className="border border-gray-400 rounded px-2 py-1"
						placeholder="Enter a link"
						onChange={({ target }) => setEnteredUserLink(target.value)}
					/>
				</div>
				<div className="w-full text-center my-4">
					<button
						className="border border-gray-600 p-2 rounded disabled:bg-gray-100 disabled:border-gray-500 disabled:text-gray-500 disabled:cursor-not-allowed"
						onClick={createShortLink}
						disabled={!enteredUserLink.length || !enteredSlug.length}
					>
						Create
					</button>
				</div>
				<div className="w-full text-center my-4">
					{responseData && responseData.data && (
						<a
							className="text-blue-600"
							href={responseData.data.shortUrl}
							target="_blank"
							rel="noreferrer"
						>
							{responseData.data.shortUrl}
						</a>
					)}
					{responseData && responseData.error}
				</div>
			</main>
		</div>
	);
};

export default Home;
